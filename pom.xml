<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <packaging>war</packaging>
  <version>1.0-SNAPSHOT</version>

  <groupId>ch.squix</groupId>
  <artifactId>sentimento</artifactId>

  <properties>
    <appengine.app.version>1</appengine.app.version>
    <appengine.target.version>1.9.6</appengine.target.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <repositories>
    <repository>
      <id>maven-restlet</id>
      <name>Public online Restlet repository</name>
      <url>http://maven.restlet.org</url>
    </repository>
    <repository>
      <id>my-alternate-repository</id>
      <url>http://myrepo.net/repo</url>
    </repository>
  </repositories>

  <dependencies>
    <!-- Compile/runtime dependencies -->
    <dependency>
      <groupId>com.google.appengine</groupId>
      <artifactId>appengine-api-1.0-sdk</artifactId>
      <version>${appengine.target.version}</version>
    </dependency>
	<dependency>
		<groupId>com.google.appengine</groupId>
		<artifactId>appengine-api-labs</artifactId>
        <version>${appengine.target.version}</version>
	</dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>2.5</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>jstl</groupId>
      <artifactId>jstl</artifactId>
      <version>1.2</version>
    </dependency>

    <!-- XML parsing -->
    <dependency>
      <groupId>com.thoughtworks.xstream</groupId>
      <artifactId>xstream</artifactId>
      <version>1.4.2</version>
    </dependency>
    <dependency>
      <groupId>xmlpull</groupId>
      <artifactId>xmlpull</artifactId>
      <version>1.1.3.1</version>
    </dependency>
    <dependency>
      <groupId>net.sf.kxml</groupId>
      <artifactId>kxml2</artifactId>
      <version>2.3.0</version>
    </dependency>

    <!-- Rest -->
    <dependency>
      <groupId>org.restlet.gae</groupId>
      <artifactId>org.restlet</artifactId>
      <version>2.1.2</version>
    </dependency>
    <dependency>
      <groupId>org.restlet.gae</groupId>
      <artifactId>org.restlet.ext.servlet</artifactId>
      <version>2.1.2</version>
    </dependency>
    <dependency>
      <groupId>org.restlet.gae</groupId>
      <artifactId>org.restlet.ext.jackson</artifactId>
      <version>2.1.2</version>
    </dependency>
    <dependency>
      <groupId>org.restlet.gae</groupId>
      <artifactId>org.restlet.ext.json</artifactId>
      <version>2.1.2</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-core-asl</artifactId>
      <version>1.9.12</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-mapper-asl</artifactId>
      <version>1.9.12</version>
    </dependency>

    <!-- App Engine -->
    <dependency>
      <groupId>com.googlecode.objectify</groupId>
      <artifactId>objectify</artifactId>
      <version>5.0.2</version>
    </dependency>

    <!-- utils -->
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>14.0.1</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.6.1</version>
    </dependency>

    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>0.9.24</version>
    </dependency>

    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>1.12.6</version>
      <scope>provided</scope>
    </dependency>

    <!-- Test Dependencies -->
    <dependency>
      <groupId>com.google.appengine</groupId>
      <artifactId>appengine-testing</artifactId>
      <version>${appengine.target.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.google.appengine</groupId>
      <artifactId>appengine-api-stubs</artifactId>
      <version>${appengine.target.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
     <pluginManagement>
      <plugins>
        <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence 
          on the Maven build itself. -->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <versionRange>[1.7,)</versionRange>
                    <goals>
                      <goal>run</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <execute/>
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <version>2.5.1</version>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.7</source>
          <target>1.7</target>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.3</version>
        <configuration>
          <archiveClasses>true</archiveClasses>
          <webResources>
            <!-- in order to interpolate version from pom into appengine-web.xml -->
            <resource>
              <directory>${basedir}/src/main/webapp/WEB-INF</directory>
              <filtering>true</filtering>
              <targetPath>WEB-INF</targetPath>
            </resource>
          </webResources>
        </configuration>
      </plugin>

      <plugin>
          <groupId>com.google.appengine</groupId>
          <artifactId>appengine-maven-plugin</artifactId>
          <version>${appengine.target.version}</version>
          <configuration>
          <jvmFlags>
              <jvmFlag>-Xdebug</jvmFlag>
              <jvmFlag>-agentlib:jdwp=transport=dt_socket,address=8000,server=y,suspend=n</jvmFlag>
           </jvmFlags>
          </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.7</version>
        <executions>
            <execution>
      <phase>generate-sources</phase>
      <configuration>
          <target name="building">
              <echo>
      <!--  NPM INSTALL  -->
              </echo>
              <exec executable="cmd" dir="${project.basedir}"
              osfamily="windows" failonerror="true">
                  <arg line="/c npm config set color false"/>
              </exec>
              <exec executable="npm" dir="${project.basedir}"
              osfamily="unix" failonerror="true">
                  <arg line="config set color false"/>
              </exec>
              <exec executable="cmd" dir="${project.basedir}"
              osfamily="windows" failonerror="true">
                  <arg line="/c npm install"/>
              </exec>
              <!-- 
              <exec executable="bash" dir="${project.basedir}"
              osfamily="unix" failonerror="true">
                  <arg line="npm install"/>
              </exec>
               -->
              <exec executable="npm" dir="${project.basedir}" failonerror="true">
			    <arg value="install" />
			  </exec>
              <echo>
      <!-- Bower  -->
              </echo>
              <exec executable="cmd" dir="${project.basedir}"
              osfamily="windows" resultproperty="cmdresult">
                  <arg line="/c bower --no-color install"/>
              </exec>
              <exec executable="bash" dir="${project.basedir}"
              osfamily="unix" resultproperty="cmdresult">
                  <arg line="bower --no-color install"/>
              </exec>
              <echo>
      <!-- GRUNT  -->
              </echo>
              <exec executable="cmd" dir="${project.basedir}"
              osfamily="windows" resultproperty="cmdresult">
                  <arg line="/c grunt --no-color "/>
              </exec>
              <exec executable="bash" dir="${project.basedir}"
              osfamily="unix" resultproperty="cmdresult">
                  <arg line="grunt --no-color"/>
              </exec>

          </target>
      </configuration>
                <goals>
                    <goal>run</goal>
                </goals>
            </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
